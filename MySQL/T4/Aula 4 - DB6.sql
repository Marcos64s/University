
CREATE TABLE UNIVERSITY.GRAU(
	tipo		VARCHAR(30),
	PRIMARY KEY(tipo)
);

CREATE TABLE UNIVERSITY.PROFESSOR(
	n_mec		BIGINT,
	nome		VARCHAR(30) NOT NULL,
	area		VARCHAR(30),
	categoria	VARCHAR(30),
	data_nasc	DATE NOT NULL,
	dep_nome	VARCHAR(30) NOT NULL,
	dedicacao	TINYINT,
	PRIMARY KEY(n_mec),
	CHECK(dedicacao BETWEEN 1 and 100),
	CHECK(n_mec >0)
);

CREATE TABLE UNIVERSITY.DEPARTAMENTO(
	nome		VARCHAR(30),
	localizacao	VARCHAR(30) NOT NULL,
	dirige_nmec	BIGINT NOT NULL

	PRIMARY KEY(nome),
	FOREIGN KEY(dirige_nmec) REFERENCES UNIVERSITY.PROFESSOR(n_mec)
);

ALTER TABLE UNIVERSITY.PROFESSOR 
	ADD CONSTRAINT PROFDEPFK 
		FOREIGN KEY(dep_nome) REFERENCES UNIVERSITY.DEPARTAMENTO(nome);

CREATE TABLE UNIVERSITY.PROJETO(
	ref				INT,
	nome			VARCHAR(30) NOT NULL,
	entidade		VARCHAR(30),
	orcamento		MONEY,
	data_in			DATE NOT NULL,
	data_f			DATE,
	gerente_nmec	BIGINT NOT NULL,
	PRIMARY KEY(ref),
	CHECK(data_f > data_in),
	FOREIGN KEY(gerente_nmec) REFERENCES UNIVERSITY.PROFESSOR(n_mec)
);

CREATE TABLE UNIVERSITY.ESTUDANTE(
	nmec		BIGINT,
	data_nasc	DATE NOT NULL,
	nome		VARCHAR(30) NOT NULL,
	nome_depart	VARCHAR(30) NOT NULL,
	grau		VARCHAR(30) NOT NULL,
	advisor		BIGINT NOT NULL,
	PRIMARY KEY(nmec),
	FOREIGN KEY(nome_depart) REFERENCES UNIVERSITY.DEPARTAMENTO(nome),
	FOREIGN KEY(grau) REFERENCES UNIVERSITY.GRAU(tipo),
	FOREIGN KEY(advisor) REFERENCES UNIVERSITY.ESTUDANTE(nmec)
);

CREATE TABLE UNIVERSITY.PROF_PROJETO(
	nmec		BIGINT,
	project_ref	INT,
	PRIMARY KEY(nmec, project_ref),
	FOREIGN KEY(project_ref) REFERENCES UNIVERSITY.PROJETO(ref),
	FOREIGN KEY(nmec) REFERENCES UNIVERSITY.PROFESSOR(n_mec)
);

CREATE TABLE UNIVERSITY.ALUNO_PROJETO(
	project_ref		INT,
	aluno_nmec		BIGINT,
	PRIMARY KEY(project_ref, aluno_nmec),
	FOREIGN KEY(project_ref) REFERENCES UNIVERSITY.PROJETO(ref),
	FOREIGN KEY(aluno_nmec) REFERENCES UNIVERSITY.ESTUDANTE(nmec)
);

CREATE TABLE UNIVERSITY.SUPERVISAO(
	project_ref		INT,
	aluno_nmec		BIGINT,
	prof_nmec		BIGINT,
	PRIMARY KEY(project_ref, aluno_nmec, prof_nmec),
	FOREIGN KEY(project_ref) REFERENCES UNIVERSITY.PROJETO(ref),
	FOREIGN KEY(aluno_nmec) REFERENCES UNIVERSITY.ESTUDANTE(nmec),
	FOREIGN KEY(prof_nmec) REFERENCES UNIVERSITY.PROFESSOR(n_mec)
);
